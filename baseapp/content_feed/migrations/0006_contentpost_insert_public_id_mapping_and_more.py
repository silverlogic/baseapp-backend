# Generated by Django 5.1.11 on 2025-09-15 14:28

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("baseapp_content_feed", "0005_contentpost_is_reactions_enabled_and_more"),
    ]

    operations = [
        pgtrigger.migrations.AddTrigger(
            model_name="contentpost",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_public_id_mapping",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="\n            INSERT INTO baseapp_core_publicidmapping (public_id, content_type_id, object_id, created, modified)\n            VALUES (\n                gen_random_uuid(),\n                (SELECT id FROM django_content_type WHERE app_label = 'baseapp_content_feed' AND model = 'contentpost'),\n                NEW.id,\n                NOW(),\n                NOW()\n            )\n            ON CONFLICT (content_type_id, object_id) DO NOTHING;\n            RETURN NULL;\n            ",
                    hash="89dc84790ac65f53fdf6dfba002d39b90b153213",
                    operation="INSERT",
                    pgid="pgtrigger_insert_public_id_mapping_97425",
                    table="baseapp_content_feed_contentpost",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="contentpost",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_public_id_mapping",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="\n            DELETE FROM baseapp_core_publicidmapping\n            WHERE\n                content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'baseapp_content_feed' AND model = 'contentpost')\n                AND object_id = OLD.id;\n            RETURN NULL;\n            ",
                    hash="34dfa0057224ba892f7a2fbf5a95b0e2109e2515",
                    operation="DELETE",
                    pgid="pgtrigger_delete_public_id_mapping_3641f",
                    table="baseapp_content_feed_contentpost",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="contentpostimage",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_public_id_mapping",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="\n            INSERT INTO baseapp_core_publicidmapping (public_id, content_type_id, object_id, created, modified)\n            VALUES (\n                gen_random_uuid(),\n                (SELECT id FROM django_content_type WHERE app_label = 'baseapp_content_feed' AND model = 'contentpostimage'),\n                NEW.id,\n                NOW(),\n                NOW()\n            )\n            ON CONFLICT (content_type_id, object_id) DO NOTHING;\n            RETURN NULL;\n            ",
                    hash="1537981cfcf6df9c286f471cbb839cadeef424bf",
                    operation="INSERT",
                    pgid="pgtrigger_insert_public_id_mapping_5077b",
                    table="baseapp_content_feed_contentpostimage",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="contentpostimage",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_public_id_mapping",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="\n            DELETE FROM baseapp_core_publicidmapping\n            WHERE\n                content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'baseapp_content_feed' AND model = 'contentpostimage')\n                AND object_id = OLD.id;\n            RETURN NULL;\n            ",
                    hash="92281c234935e8023aa6653f2de15142b21836e1",
                    operation="DELETE",
                    pgid="pgtrigger_delete_public_id_mapping_c2666",
                    table="baseapp_content_feed_contentpostimage",
                    when="AFTER",
                ),
            ),
        ),
    ]
