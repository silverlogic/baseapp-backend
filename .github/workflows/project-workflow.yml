name: Project Workflow

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string

jobs:
  project-workflow:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      # Lint
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - run: echo "üóíÔ∏è Checking ${{ inputs.project }} Lint"
      - name: Install flake8, isort and black
        id: lint_installation
        run: |
          python -m pip install --upgrade pip
          pip install flake8 isort black
      - name: flake8
        id: flake8
        if: steps.lint_installation.outcome == 'success'
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 ./${{ inputs.project }} --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 ./${{ inputs.project }} --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: isort
        id: isort
        if: steps.flake8.outcome == 'success'
        run: isort --check ./${{ inputs.project }}
      - name: black
        id: black
        if: steps.isort.outcome == 'success'
        run: black --check ./${{ inputs.project }}
      # Test
      - run: echo "üß™ Checking ${{ inputs.project }} Tests"
        if: steps.black.outcome == 'success'
      - name: Install tests requirements
        if: steps.black.outcome == 'success'
        id: requirements_installation
        run: |
          python -m pip install --upgrade pip
          pip install -r baseapp-core/testproject/requirements.txt
          requirements_path="${{ inputs.project }}/testproject/requirements.txt"
          if [ -f ${requirements_path} ]; then pip install -r ${requirements_path}; else echo 'No requirements.txt file found in testproject directory'; fi
      - name: pytest
        if: steps.requirements_installation.outcome == 'success'
        run: |
          app_name=$(echo "${{ inputs.project }}" | tr '-' '_')
          tests_path="${{ inputs.project }}/${app_name}/tests"
          pytest ${tests_path}
